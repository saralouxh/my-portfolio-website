@use 'sass:color';
@import url('https://fonts.googleapis.com/css2?family=Amatic+SC:wght@700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@700&display=swap');


h1{
    color: white;
    text-align: center;
    font-family: 'Roboto Mono', monospace;
    font-size: 60px;
}
.header{
    padding-top: 12rem;
}
.container-fluid {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  overflow-y: auto;
}
.arrow{
  display: flex;
  align-items: center;
  justify-content: center;
  color: #9AEFA1;
  font-size: 20rem; /* Adjust the font size to make the arrow bigger */
  margin: 0; /* Remove the margin around the arrow */
  padding: 0;
}

// One-stop magic hue shift
$hue: 125deg; // change me (0deg-360deg)
$hue-adjust: 125deg; // and me

$hue-contrast: color.hue(color.adjust(hsl($hue, 52%, 67%), $hue: $hue-adjust));

:root {
  --page-background: #{$hue}, 52%, 12%;
}

button {
  // We're using HSL values, so we can use hsla() and control opacity when required
  // hsla(hue, saturation, lightness, opacity)

  // this changes base color of button
  --text-base: #{$hue}, 74%, 77%;
  --text-hover: #{$hue + 30}, 72%, 86%;

  --shadow-start: #{$hue-contrast}, 100%, 72%;
  --shadow-end: #{$hue + 5}, 90%, 50%;

  --shadow-inner: #{$hue}, 90%, 62%;

  all: unset;

  // Text
  color: hsla(var(--text-base), 1);
  font: 700 1.125rem/1.2 Raleway, sans-serif;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  text-align: center;

  // Button sizing
  padding: 0.85em;
  max-width: 100%;
  width: 12em;

  // Button styling
  background: inherit;
  background-clip: padding-box;
  border: 5px solid hsla(var(--text-base), 1);
  border-radius: 2em;
  cursor: pointer;

  // Effects
  position: absolute;
  transition: 0.25s ease-out;

  // Set up pseudo elements
  &::before,
  &::after {
    content: "";
    border-radius: inherit;
    transition: inherit;
    position: absolute;
    inset: 0;
    pointer-events: none;
  }

  // Gradient shadow
  &::before {
    // Position
    inset: -0.2em;
    z-index: -1;

    // Effect
    background: linear-gradient(hsla(var(--shadow-start), 1), hsla(var(--shadow-end), 1));
    filter: blur(1.2em) saturate(1.2);

    // Animation
    transform-origin: bottom;
    transform: scaleY(0.5);
    opacity: 0;
  }

  // Semi-transparent blended box-shadow brightens up the border
  &::after {
    // Effect
    box-shadow: inset 0 0 0 1px #fff, // inner pixel
      0 0 0 4px hsla(0deg, 0%, 100%, 0.7), // ligthened border
      1px 1px 0 4px #fff; // outer pixel
    mix-blend-mode: overlay;

    // Animation
    opacity: 0;
  }

  &:hover {
    color: hsla(var(--text-hover), 1);

    // Lighten border
    border-color: transparent;

    // Inner shadow
    box-shadow: 
      inset 0 1.4em 0 hsla(var(--shadow-inner), 0.1), // gloss
      inset 0 0 1.4em hsla(var(--shadow-inner), 0.32), // inner glow
      0 1px 1px hsla(var(--shadow-inner), 0.32); // bottom line

    // Show effects
    &::before,
    &::after {
      transform: none;
      opacity: 1;
    }
  }
}

.fancy-button {
  background: hsla(var(--page-background), 1);
}

.fancy-button {
  margin-top: 3rem;
  padding: 3em;
  position: relative;
  z-index: 1;
  display: flex;
  justify-content: center;
  align-items: center;
}